name: K8 Environment Release
run-name: |
  [gh-${{ github.run_id }}] ${{ github.actor }} is deploying changes from ${{ github.head_ref || github.ref_name }} on ${{ inputs.environment }} 🧘‍♂️

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options:
          - staging
          - production
      run-e2e:
        required: true
        type: boolean
        description: 'Run e2e tests'
        default: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  start-notification:
    uses: ./.github/workflows/slack-notify-post.yml
    with:
      message-type: start
      environment: ${{ inputs.environment }}
      status: 'in-progress'
      slack-channel-id: 'C07G8T93BQT'
    secrets: inherit

  env-setup:
    needs: [start-notification]
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Validate branch for production deployment
        if: inputs.environment == 'production'
        run: |
          if [[ ! "${{ env.BRANCH_NAME }}" =~ ^release.* ]]; then
            echo "Error: Production deployment must be from a release branch."
            exit 1
          fi

  notify-env-setp:
    needs: [start-notification, env-setup]
    uses: ./.github/workflows/slack-notify-comment.yml
    if: always() && needs.env-setup.result != 'skipped'
    with:
      job-name: 'Environment setup'
      status: ${{ needs.env-setup.result}}
      slack-message-ts: ${{ needs.start-notification.outputs.slack-message-ts }}
      slack-channel-id: 'C07G8T93BQT'
    secrets: inherit

  run-tests:
    name: Run tests
    needs: [start-notification, env-setup]
    runs-on: ubuntu-latest
    steps:
      - name: Run tests
        run: |
          echo "Running tests..."
          sleep 5
          echo "Tests passed!"

  notify-run-tests:
    needs: [start-notification, run-tests]
    uses: ./.github/workflows/slack-notify-comment.yml
    if: always() && needs.run-tests.result != 'skipped'
    with:
      job-name: 'Run tests'
      status: ${{ needs.run-tests.result }}
      slack-message-ts: ${{ needs.start-notification.outputs.slack-message-ts }}
      slack-channel-id: 'C07G8T93BQT'
    secrets: inherit

  release-be:
    name: Release BE
    needs: [start-notification, env-setup, run-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Release BE
        run: |
          echo "Releasing BE..."
          sleep 5
          echo "BE released!"

  notify-release-be:
    needs: [start-notification, release-be]
    uses: ./.github/workflows/slack-notify-comment.yml
    if: always() && needs.release-be.result != 'skipped'
    with:
      job-name: 'Release BE'
      status: ${{ needs.release-be.result }}
      slack-message-ts: ${{ needs.start-notification.outputs.slack-message-ts }}
      slack-channel-id: 'C07G8T93BQT'
    secrets: inherit

  release-fe:
    name: Release FE
    needs: [start-notification, env-setup, run-tests, release-be]
    runs-on: ubuntu-latest
    steps:
      - name: Release FE
        run: |
          echo "Releasing FE..."
          sleep 5
          echo "FE released!"

  notify-release-fe:
    needs: [start-notification, release-fe]
    uses: ./.github/workflows/slack-notify-comment.yml
    if: always() && needs.release-fe.result != 'skipped'
    with:
      job-name: 'Release FE'
      status: ${{ needs.release-fe.result }}
      slack-message-ts: ${{ needs.start-notification.outputs.slack-message-ts }}
      slack-channel-id: 'C07G8T93BQT'
    secrets: inherit

  determine-status:
    needs: [env-setup, run-tests, release-be, release-fe]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Determine workflow status
        id: status
        run: |
          if [[ ${{ contains(needs.*.result, 'failure') }} == 'true' ]]; then
            echo "workflow_status=failure" >> $GITHUB_OUTPUT
          else
            echo "workflow_status=success" >> $GITHUB_OUTPUT
          fi
    outputs:
      workflow-status: ${{ steps.status.outputs.workflow_status }}

  end-notification:
    needs: [start-notification, determine-status]
    uses: ./.github/workflows/slack-notify-post.yml
    if: always()
    with:
      message-type: end
      environment: ${{ inputs.environment }}
      status: ${{ needs.determine-status.outputs.workflow-status }}
      slack-message-ts: ${{ needs.start-notification.outputs.slack-message-ts }}
      slack-channel-id: 'C07G8T93BQT'
    secrets: inherit
